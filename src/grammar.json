{
  "$schema": "https://tree-sitter.github.io/tree-sitter/assets/schemas/grammar.schema.json",
  "name": "novi_query",
  "rules": {
    "query": {
      "type": "SEQ",
      "members": [
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_newline"
          }
        },
        {
          "type": "SYMBOL",
          "name": "_query"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_newline"
          }
        }
      ]
    },
    "_query": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_atom"
        },
        {
          "type": "SYMBOL",
          "name": "query_and"
        },
        {
          "type": "SYMBOL",
          "name": "query_or"
        }
      ]
    },
    "query_and": {
      "type": "PREC_LEFT",
      "value": 1,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_query"
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "STRING",
                "value": ","
              },
              {
                "type": "REPEAT1",
                "content": {
                  "type": "SYMBOL",
                  "name": "_newline"
                }
              }
            ]
          },
          {
            "type": "SYMBOL",
            "name": "_query"
          }
        ]
      }
    },
    "query_or": {
      "type": "PREC_LEFT",
      "value": 2,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_query"
          },
          {
            "type": "STRING",
            "value": "/"
          },
          {
            "type": "SYMBOL",
            "name": "_query"
          }
        ]
      }
    },
    "_atom": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "atom_tag"
        },
        {
          "type": "SYMBOL",
          "name": "atom_neg"
        },
        {
          "type": "SYMBOL",
          "name": "atom_any"
        },
        {
          "type": "SYMBOL",
          "name": "atom_group"
        },
        {
          "type": "SYMBOL",
          "name": "atom_subject"
        },
        {
          "type": "SYMBOL",
          "name": "atom_relation"
        }
      ]
    },
    "atom_tag": {
      "type": "SYMBOL",
      "name": "tag"
    },
    "atom_neg": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "-"
        },
        {
          "type": "SYMBOL",
          "name": "_atom"
        }
      ]
    },
    "atom_any": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "atom_group": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_newline"
          }
        },
        {
          "type": "SYMBOL",
          "name": "_query"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_newline"
          }
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "atom_subject": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_subject"
        },
        {
          "type": "STRING",
          "value": ":"
        },
        {
          "type": "SYMBOL",
          "name": "_atom"
        }
      ]
    },
    "atom_relation": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_subject"
        },
        {
          "type": "STRING",
          "value": "-"
        },
        {
          "type": "SYMBOL",
          "name": "_subject"
        },
        {
          "type": "STRING",
          "value": "-"
        },
        {
          "type": "SYMBOL",
          "name": "_subject"
        }
      ]
    },
    "_subject": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "subject_any"
        },
        {
          "type": "SYMBOL",
          "name": "subject_named"
        },
        {
          "type": "SYMBOL",
          "name": "subject_type_only"
        }
      ]
    },
    "subject_any": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "["
        },
        {
          "type": "STRING",
          "value": "]"
        }
      ]
    },
    "subject_named": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "tag"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "["
            },
            {
              "type": "SYMBOL",
              "name": "tag"
            },
            {
              "type": "STRING",
              "value": "]"
            }
          ]
        }
      ]
    },
    "subject_type_only": {
      "type": "SYMBOL",
      "name": "tag"
    },
    "tag": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "tag_plain"
        },
        {
          "type": "SYMBOL",
          "name": "string"
        }
      ]
    },
    "tag_plain": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "[\\w·'_\\.][\\w·'_\\. ]*"
      }
    },
    "string": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "\""
            },
            {
              "type": "STRING",
              "value": "\""
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "\""
            },
            {
              "type": "SYMBOL",
              "name": "_string_contents"
            },
            {
              "type": "STRING",
              "value": "\""
            }
          ]
        }
      ]
    },
    "_string_contents": {
      "type": "REPEAT1",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_string_content"
          },
          {
            "type": "SYMBOL",
            "name": "_escape_sequence"
          }
        ]
      }
    },
    "_string_content": {
      "type": "IMMEDIATE_TOKEN",
      "content": {
        "type": "PREC",
        "value": 1,
        "content": {
          "type": "PATTERN",
          "value": "[^\\\\\"\\n]+"
        }
      }
    },
    "_escape_sequence": {
      "type": "IMMEDIATE_TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "\\"
          },
          {
            "type": "PATTERN",
            "value": "(\\\"|\\\\|\\/|b|f|n|r|t|u)"
          }
        ]
      }
    },
    "_newline": {
      "type": "TOKEN",
      "content": {
        "type": "STRING",
        "value": "\n"
      }
    },
    "comment": {
      "type": "TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "#"
          },
          {
            "type": "PATTERN",
            "value": ".*"
          }
        ]
      }
    }
  },
  "extras": [
    {
      "type": "SYMBOL",
      "name": "comment"
    },
    {
      "type": "PATTERN",
      "value": "[ \\t]"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}
